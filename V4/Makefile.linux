CXX=g++
CXX_FLAGS=-Wall -Wextra -Wpedantic -std=c++11 -ffast-math -I. -I/usr/include/SDL2 -g -O3
LIBS=-lm -lSDL2
BIN=daric
BUILD_DIR=./buildlinux

# List of all .cpp source files.
CPP = $(wildcard src/*.cpp) $(wildcard src/compiler/*.cpp) $(wildcard src/engine/*.cpp) $(wildcard src/graphics/*.cpp) $(wildcard src/optimiser/*.cpp) $(wildcard src/parser/*.cpp) $(wildcard src/vm/*.cpp) $(wildcard src/vm/manual/*.cpp)

# All .o files go to build dir.
OBJ = $(CPP:%.cpp=$(BUILD_DIR)/%.o)

# Gcc/Clang will create these .d files containing dependencies.
DEP = $(OBJ:%.o=%.d)

# Default target named after the binary.
$(BIN) : $(BUILD_DIR)/$(BIN)

# Actual target of the binary - depends on all .o files.
$(BUILD_DIR)/$(BIN) : $(OBJ)
	mkdir -p $(@D)
	$(CXX) $(CXX_FLAGS) $(LIBS) $^ -o $@

# Include all .d files
-include $(DEP)

# Build target for every single object file.
# The potential dependency on header files is covered
# by calling `-include $(DEP)`.
$(BUILD_DIR)/%.o : %.cpp 
	mkdir -p $(@D)
	$(CXX) $(CXX_FLAGS) -MMD -c $< -o $@

.PHONY : clean
clean :
	# This should remove all generated files.
	-rm $(BUILD_DIR)/$(BIN) $(OBJ) $(DEP)
